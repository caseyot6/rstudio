library(tidyverse)
library(ggplot2)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(tm)
FakeJobs = read.csv('Datasets/fake_job_postings.csv')
fraud_jobs = FakeJobs %>% filter(fraudulent == 1)
actual_jobs = sample_n(FakeJobs %>% filter(fraudulent == 0), nrow(fraud_jobs))
fraud_doc = fraud_jobs$description
actual_doc = actual_jobs$description
clean_dtm_text = function(document){
doc = Corpus(VectorSource(document)) %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
doc = tm_map(doc, content_transformer(tolower))
doc = tm_map(doc, removeWords, stopwords("english"))
dtm = TermDocumentMatrix(doc)
matrix = as.matrix(dtm)
words = sort(rowSums(matrix),decreasing=TRUE)
df = data.frame(word = names(words),freq=words)
return(df)
}
fraud_descriptions = clean_dtm_text(fraud_doc)
legit_descriptions = clean_dtm_text(actual_doc)
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 30)
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 300)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 300)
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 100)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 100)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 100)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 100)
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20)
?wordcloud
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, ordered.colors = TRUE)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, ordered.colors = TRUE)
?wordcloud
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, ordered.colors = TRUE, colors=brewer.pal(8, "Dark"))
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, ordered.colors = TRUE, colors=brewer.pal(8, "Dark"))
?brewer.pal
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, ordered.colors = TRUE, colors=brewer.pal(5, "Accent"))
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, ordered.colors = TRUE, colors=brewer.pal(5, "Accent"))
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(5, "Accent"))
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(5, "Accent"))
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(5, "Set2"))
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(5, "Set2"))
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(9, "Set2"))
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 20, min.freq = 1, colors=brewer.pal(9, "Set2"))
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(3.5,0.25) )
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(3.5,0.25) )
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(8,0.25) )
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(8,0.25) )
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.2) )
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.2) )
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.1) )
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.1) )
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.1), random.order = FALSE)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(6,0.1), random.order = FALSE )
wordcloud(fraud_descriptions$word, fraud_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(3,0.1), random.order = FALSE)
wordcloud(legit_descriptions$word, legit_descriptions$freq, max.words = 50, min.freq = 1, colors=brewer.pal(9, "Set2"),
scale=c(3,0.1), random.order = FALSE )
not_in_other = function(df_1, df_2)
{
new_df = df()
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
}
not_in_other = function(df_1, df_2)
{
new_df = df()
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
colnames(fraud_descriptions)
nrow(colnames(fraud_descriptions))
length(colnames(fraud_descriptions))
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
for (row_1 in df_1){
for (row_2 in df_2)
{
print(row_1)
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(new_df)
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
colnames(legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(new_df)
print(new_df)
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(new_df)
print(new_df)
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(new_df)
print(new_df)
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(new_df)
print(new_df)
print(colnames(df_1))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
new_df = rbind(new_df, row_1)
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[1] == row_2[1])
{
print("okay")
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
for (row_2 in df_2)
{
if (row_1[0] == row_2[0])
{
print("okay")
}
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
cat(row_1+"\n")
for (row_2 in df_2)
{
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1)
for (row_2 in df_2)
{
}
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
head(fraud_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1[1])
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1[1])
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1)
cat("\n")
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1)
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1["freq"])
}
return(new_df)
new_item = not_in_other(fraud_descriptions, legit_descriptions)
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1["freq"])
}
return(new_df)
}
new_item = not_in_other(fraud_descriptions, legit_descriptions)
ihpbn
not_in_other = function(df_1, df_2)
{
new_df = data.frame(matrix(ncol = length(colnames(df_1)), nrow = 0))
colnames(new_df) = colnames(df_1)
print(colnames(new_df))
print(colnames(df_1))
print(colnames(df_2))
for (row_1 in df_1){
print(row_1["freq"])
}
return(new_df)
}
